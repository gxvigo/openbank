paths:
  /banks:
    post:
      tags:
        - bank
      summary: Create a new instance of the model and persist it into the data source.
      operationId: bank.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/bank'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/bank'
      deprecated: false
    get:
      tags:
        - bank
      summary: Find all instances of the model matched by filter from the data source.
      operationId: bank.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/bank'
      deprecated: false
  /accounts:
    post:
      tags:
        - account
      summary: Create a new instance of the model and persist it into the data source.
      operationId: account.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/account'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/account'
      deprecated: false
    get:
      tags:
        - account
      summary: Find all instances of the model matched by filter from the data source.
      operationId: account.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/account'
      deprecated: false
  /transactions:
    post:
      tags:
        - transaction
      summary: Create a new instance of the model and persist it into the data source.
      operationId: transaction.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/transaction'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/transaction'
      deprecated: false
    get:
      tags:
        - transaction
      summary: Find all instances of the model matched by filter from the data source.
      operationId: transaction.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/transaction'
      deprecated: false
definitions:
  bank:
    properties:
      bank_id:
        description: bank id
        type: string
      logo:
        description: URL of bank log
        type: string
      long_name:
        description: bank long name
        type: string
      short_name:
        description: bank short name
        type: string
      website:
        description: bank website URL
        type: string
    required:
      - bank_id
      - logo
      - long_name
      - short_name
      - website
    additionalProperties: false
  account:
    properties:
      IBAN:
        description: IBAN
        type: string
      balance:
        description: Account balance
        type: number
        format: double
      account_id:
        description: Account identifier
        type: string
      label:
        description: Account label
        type: string
      owner:
        description: owner of the account
        type: string
      type:
        description: Account type (e.g. savings)
        type: string
    required:
      - IBAN
      - balance
      - account_id
      - label
      - owner
      - type
    additionalProperties: false
  transaction:
    properties:
      transaction_id:
        description: Unique transaction identifier
        type: string
      this_account_id:
        type: string
      other_account_id:
        type: string
      type:
        description: Transaction type (e.g. cash)
        type: string
      description:
        type: string
      posted:
        description: Date of transaction initiation
        type: string
        format: date
      completed:
        description: Date of transaction completion
        type: string
        format: date
      value_currency:
        type: string
      value_amount:
        type: number
        format: double
      where_lat:
        description: Latitude where the transaction happened
        type: string
      where_lon:
        description: Longitude where the transaction happened
        type: string
    required:
      - transaction_id
      - this_account_id
      - other_account_id
      - type
      - description
      - posted
      - completed
      - value_currency
      - value_amount
      - where_lat
      - where_lon
    additionalProperties: false
swagger: '2.0'
info:
  x-ibm-name: openbank
  version: 1.0.0
  title: openbank
schemes:
  - https
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
